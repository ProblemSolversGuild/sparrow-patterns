{
    "name": "{{ project_name }}",
    "build": {
        "dockerfile": "../Dockerfile",
        "context": ".."
    },
    "settings": {
        "python.pythonPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        // pydocstyle
        "python.linting.pydocstyleEnabled": true,
        "python.linting.pydocstylePath": "/usr/local/bin/pydocstyle",
        // black
        "python.formatting.blackPath": "/usr/local/bin/black",
        "python.formatting.provider": "black",
        "[python]": {
            "editor.formatOnSave": true,
            "editor.codeActionsOnSave": {
                "source.organizeImports": true
            },
        },
        // isort
        "python.sortImports.path": "/usr/local/bin/isort",
        // pylint
        "python.linting.pylintEnabled": true,
        "python.linting.pylintPath": "/usr/local/bin/pylint",
        // pytest
        "python.testing.pytestArgs": [
            "{{ source_directory }}"
        ],
        "python.testing.pytestEnabled": true,
    },
    "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance"
    ],
    "mounts": [
        "source=projectname-bashhistory,target=/commandhistory,type=volume",
        "source=${localEnv:HOME}/.ssh,target=/root/.ssh,type=bind,consistency=cached,readonly",{% if not package %}
        "source=${localEnv:HOME}/.aws,target=/root/.aws,type=bind,consistency=cached,readonly",
        "source=${localEnv:HOME}/.darwin,target=/root/.darwin,type=bind,consistency=cached,readonly",
        "source=${localEnv:HOME}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached,readonly",
        "source=/data,target=/data,type=bind,consistency=cached",{% endif %}
    ],
    "workspaceFolder": "/code",
    "workspaceMount": "source=${localWorkspaceFolder},target=/code,type=bind,consistency=cached",
    "runArgs": [
        "--ipc=host",{% if gpu %}     
        "--gpus=all",{% endif %}{% if not package %}
        "--env-file=.devcontainer/.env"{% endif %}
    ],
    "postCreateCommand": "pip install -e .[dev]",
}
